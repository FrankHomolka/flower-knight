<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_progress_book</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_static_depth_parent</parentName>
  <maskName>spr_shop</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/* Draw vars */
startY = y;
counter = 0;

/* Generate Item List items */
var numItems = 0;
var i = 0;
var unlocked = false;

/*                         DEFAULT UNLOCKED ITEMS               */
if(ds_list_size(global.itemsUnlocked) == 0) {
    scr_find_item('SHIELD');
    ds_list_add(global.itemsUnlocked, item);
    scr_find_item('ASSASSIN');
    ds_list_add(global.itemsUnlocked, item);
    scr_find_item('RUNNER');
    ds_list_add(global.itemsUnlocked, item);
    scr_find_item('MORTAL KOMBAT');
    ds_list_add(global.itemsUnlocked, item);
    scr_save_item_list();
}

if(global.unlockAllItems) {
    for(var j = 0; j &lt; ds_list_size(global.itemList); j++) {
        ds_list_add(global.itemsUnlocked, global.itemList[| j]);  
    }
}

// If less than 2 items to unlock
if(ds_list_size(global.itemList) - ds_list_size(global.itemsUnlocked) &lt; 3) {
    numItems = ds_list_size(global.itemList) - ds_list_size(global.itemsUnlocked);
}

activated = false;
spawnedItems = false;
rowLength = 10;
initial_gw = 1600;
initial_gh = 900;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>counter += 0.1;

// Open when player close enough
if(distance_to_point(obj_player.x, obj_player.y) &lt; 20) {
    if(obj_player.interact) {
        if(!activated) {
            audio_play_sound_on(myEmitter, snd_open_shop, false, 1); 
            activated = true;
            with(obj_shop_item) {
                visible = true;
            }
        }
    } else if(obj_player.close) {
        activated = false;
        audio_play_sound_on(myEmitter, snd_close_shop, false, 1); 
        with(obj_shop_item) {
            visible = false;
        }
    }
}

if(object_exists(obj_focus_controller)) {
    if(obj_focus_controller.madeList == true) {
        if(!spawnedItems) {
            j = 0;
            while(j &lt; ds_list_size(global.itemList)) {
                for(i = 0; i &lt; rowLength; i++) {
                    unlocked = false;
                    
                    // If at end of list break
                    if(j+i &gt;= ds_list_size(global.itemList)) {
                        j = ds_list_size(global.itemList);
                        break;
                    }
                    
                    // Draw item
                    itemMap = global.itemList[| (j + i)];
                    
                    // Check already unlocked
                    for(var k = 0; k &lt; ds_list_size(global.itemsUnlocked); k++) {
                        var checkItem = global.itemsUnlocked[| k];
                        if(itemMap[? "name"] == checkItem[? "name"]) {
                            //show_debug_message("ALREADY UNLOCKED " + string(checkItem[? "name"]));
                            unlocked = true;
                            break;
                        }
                    }
                    
                    // MAKES IT SO SPRITES DONT OVERLAP SELLER GUY
                    if((j / rowLength) &gt; 3) {
                        rowLength = 8;
                    }
                    
                    // Create frame and item
                    with(instance_create(x,y, obj_shop_item)) {
                        rowX = other.i;
                        rowY = other.j;
                        unlocked = other.unlocked;
                        itemMap = other.itemMap;
                    }
                    
                }
                if(j+rowLength &lt; ds_list_size(global.itemList)) {
                    j+=rowLength;
                } else {
                    j = ds_list_size(global.itemList);
                }
            }
            spawnedItems = true;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -2000;
gw = display_get_gui_width();
gh = display_get_gui_height();
horBlock = gw / 32;
vertBlock = gh / 32;
scaleFactor = (gw / initial_gw);

if(activated)
    draw_sprite_ext(spr_unlocked_items, 0, gw / 2, gh / 2, 5.5 * scaleFactor, 5.5 * scaleFactor, 0, c_white, 1);

if(distance_to_point(obj_player.x, obj_player.y) &lt; 20) {
    draw_set_font(fnt_1);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    if(!activated) {
        draw_text_transformed(gw / 2, gh / 5, "'E' to open tome", 3 * scaleFactor, 3 * scaleFactor, 0);
    } else {
        draw_text_transformed(gw / 1.4 ,gh / 8, "'ESC' to close tome", 3 * scaleFactor, 3 * scaleFactor, 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_draw_entity_shadow(18, 6, 0, 4);
draw_sprite(spr_progress_book, 0, x, startY + sin(counter));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
