<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_wall</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>wallUp = false;
tileSheet = bck_area_1;
image_speed = 0;
locked = true;
visible = true;
wallStart = instance_create(x,y,obj_wall);
sprite_index = spr_boss_locked_wall;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(instance_exists(boss)) {
    // Unlock door
    if(!wallUp &amp;&amp; locked) {
        if(distance_to_object(obj_dungeon_key) &lt; 20) {
            // Handles player using key
            if(obj_player.interact) {
                boss.unlockedRoom = true;
                with(obj_dungeon_key) instance_destroy();
                show_debug_message('destroy');
                visible = false;
                locked = false;
                with(wallStart) {
                    mp_grid_clear_cell(global.grid, floor(x / 16), floor(y / 16));
                    instance_destroy();
                }
            }
        }
    } 

    // Handles if player uses key
    if(boss.unlockedRoom &amp;&amp; locked) {
        visible = false;
        locked = false;
        with(wallStart) {
            mp_grid_clear_cell(global.grid, floor(x / 16), floor(y / 16));
            instance_destroy();
        }
    }
    
    // Puts wall BACK up when player starts fight
    if(boss.foundPlayer == true &amp;&amp; !wallUp) {
        sprite_index = spr_boss_wall;
        image_speed = 0.13;
        wallUp = true;
        wall = instance_create(x,y,obj_wall);
        visible = true;
        mp_grid_add_instances(global.grid, wall, false);
    }
    
    if(boss.inFight == false &amp;&amp; wallUp) {
        with(wall) {
            mp_grid_clear_cell(global.grid, floor(x / 16), floor(y / 16));
            instance_destroy();
        }
        instance_destroy();
    }
    if(image_index &gt; image_number - 1)
        image_speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
