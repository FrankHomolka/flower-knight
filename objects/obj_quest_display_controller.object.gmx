<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>numQuests = 3;
counter = 0;
i = 0;
initial_gw = 1600;
initial_gh = 900;
showQuests = true;
mouseInside = false;
unlockedItem = false;
unlockedItemMap = '';
unlockedItemCounter = 450;
unlockedItemQueue = ds_queue_create();
questProgress[3] = '';
objectiveTextColor = make_colour_hsv(170, 184, 94);
obj_quest_controller.counter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_queue_destroy(unlockedItemQueue);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(keyboard_check_pressed(ord('H')) &amp;&amp; room != rm_quest) {
    showQuests = !showQuests;
}
if(showQuests)
    counter+=0.02;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>depth = -1000000;
gw = display_get_gui_width();
gh = display_get_gui_height();
horBlock = gw / 32;
vertBlock = gh / 32;
scaleFactor = (gw / initial_gw);
if(showQuests) {
    draw_set_font(fnt_ui);
    
    draw_set_alpha(0.4);
    draw_set_color(c_black);
    draw_rectangle(0, 0, gw, gh, false);
    draw_set_alpha(1);
    draw_sprite_ext(spr_quest_background, 0, gw / 2, gh / 2, 7.2 * scaleFactor, 7.2 * scaleFactor, 0, c_white, 1);
    draw_set_valign(fa_top);
    draw_set_halign(fa_center);
    draw_set_color(c_white);
    draw_set_halign(fa_left);
    for(r = 0; r &lt; ds_list_size(obj_quest_controller.questList); r++) {
        item = obj_quest_controller.questList[| r];
        draw_set_color(objectiveTextColor);
        draw_text_ext_transformed(gw / 2 - (3.6*horBlock), (6 * vertBlock * (r + 1)) + (3.2 * vertBlock), item[? 'questText'], 14, 170, 3 * scaleFactor, 3 * scaleFactor, 0);
        draw_text_transformed(gw / 2 - (3.6*horBlock), (6 * vertBlock * (r + 1.5)) - (1 * vertBlock), questProgress[r], 2.5 * scaleFactor, 2.5 * scaleFactor, 0);
        draw_set_color(c_white);
        draw_text_ext_transformed(gw / 2 - (3.6*horBlock), (6 * vertBlock * (r + 1)) + (3.1 * vertBlock), item[? 'questText'], 14, 170, 3 * scaleFactor, 3 * scaleFactor, 0);
        draw_sprite_ext(item[? 'sprite'], 0, gw / 2 - (4.4 * horBlock), (6 * vertBlock * (r + 1)) + (3 * vertBlock), 4 * scaleFactor, 4 * scaleFactor, 0, c_white, 1);
    }
    
    if(room == rm_quest) {
        draw_set_halign(fa_center);
        draw_set_alpha(1);
        draw_set_color(objectiveTextColor);
        draw_text_transformed(gw / 2, gh / 1.19, 'Accept Quests', 3.5 * (1 + abs(sin(counter) / 2)) * scaleFactor, 3.5 * (1 + abs(sin(counter) / 2)) * scaleFactor, 0);
        draw_set_color(c_white);
        draw_text_transformed(gw / 2, gh / 1.2, 'Accept Quests', 3.5 * (1 + abs(sin(counter) / 2)) * scaleFactor, 3.5 * (1 + abs(sin(counter) / 2)) * scaleFactor, 0);
        /*draw_set_color(c_black);
        draw_set_alpha(0.2);
        draw_rectangle(gw / 3, gh / 1.25, gw / 1.5, gh / 1.05, false);*/
        if(point_in_rectangle(window_mouse_get_x(),window_mouse_get_y(), 
            gw / 3, gh / 1.25, gw / 1.5, gh / 1.05)) {
            mouseInside = true;
        } else {
            mouseInside = false;
        }
        
        if(mouseInside &amp;&amp; mouse_check_button_pressed(mb_left)) {
            showQuests = false;
            audio_play_sound(snd_button_click, 10, false);
            room_goto(rm_procedural);
        }  
    }  
}

if(ds_queue_size(unlockedItemQueue) &gt; 0 &amp;&amp; !unlockedItem) {
    unlockedItem = true;
    unlockedItemMap = ds_queue_dequeue(unlockedItemQueue);
    unlockedItemCounter = 450;
    audio_play_sound(snd_unlocked_item, 10, false);
}

if(unlockedItem &amp;&amp; unlockedItemCounter &gt; 0) {
    draw_set_halign(fa_center);
    draw_set_valign(fa_top);
    draw_set_alpha(1);
    draw_set_color(c_yellow);
    draw_text_transformed(gw / 2, gh / 2 + (4 * vertBlock), 'QUEST COMPLETE ' + string(unlockedItemMap[? 'name']) + '!', 5 * scaleFactor, 5 * scaleFactor, 0);
    draw_set_color(c_white);
    draw_text_transformed(gw / 2, gh / 2 + (8 * vertBlock), string(unlockedItemMap[? 'questText']) + '!', 4 * scaleFactor, 4 * scaleFactor, 0);
    draw_sprite_ext(unlockedItemMap[? 'sprite'], 0, gw / 2, gh / 2 + (12 * vertBlock), 6 * scaleFactor, 6 * scaleFactor, 0, c_white, 1);
    unlockedItemCounter--;
} else {
    unlockedItem = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
