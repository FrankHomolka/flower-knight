<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss_2_top</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_boss_head_parent</parentName>
  <maskName>spr_boss_2_top</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

chaseAttackLength = 100;
attackLength = chaseAttackLength;
hp = 80;
hit = false;
chargeTime = 150;
chargeCounter = chargeTime;
spikeDamage = 0;
dead = false;
image_speed = 0.1;
sprite_index = spr_boss_2_top_charge;
state = states.idle;
hurtSound = snd_enemy_hit;
deathSound = snd_enemy_death;
deathSprite = spr_boss_2_top_dead;
hitSprite = spr_boss_2_top;
kbAmount = 0;
kbCounter = kbAmount;
attacking = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(chargeCounter &lt; 0) {
    
    if(hp &lt;= 0) {
        state = states.death;
    } else if(attacking) {
        state = states.attack;
    }
    
    /* Hit state */
    if(tryHit) {
        if(!hit) {
            previousState = state;
            hit = true;
            currentHp = hp;
        } else {
            damageSource = false;
            tryHit = false;
        }
    }
    
    if(hit) {
        state = states.hit;
    } else {
        attacking = true;
    }
} 

switch(state) {
    case states.attack:
        scr_boss_2_head_chase_state();
        break;
    case states.death:
        scr_boss_2_head_death_state();
        break;
    case states.idle:
        scr_boss_2_head_idle_state();
        break;
    case states.hit:
        scr_boss_2_head_hit_state();
        break;
    default:
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(chargeCounter &gt; 0) {
    var playerDir = point_direction(x,y,obj_player.x,obj_player.y);
    draw_sprite_ext(spr_boss_2_head_arrow,abs(chargeTime - chargeCounter) / 4,x + lengthdir_x(35,playerDir) ,y + lengthdir_y(35,playerDir),1.2,1.2,playerDir-90,c_black,1);
    draw_sprite_ext(spr_boss_2_head_arrow,abs(chargeTime - chargeCounter) / 4,x + lengthdir_x(35,playerDir) ,y + lengthdir_y(35,playerDir),1,1,playerDir-90,c_white,1);
}

event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
