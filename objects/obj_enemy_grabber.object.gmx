<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_grabber_attack</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/* Mob values */
chaseDistance = 400;
moveSpeed = 0;
maxHp = 30;
hp = maxHp;
attackDamage = 10;
customWalk = false;
attackObject = obj_skeleton_attack;
goldDropOnDeath = 10;
grabbedPlayer = false;

/* Animation and Sprites */
sprite = spr_grabber_attack;
idleSprite = spr_grabber_attack;
walkSprite = spr_grabber_attack;
walkUpSprite = spr_grabber_attack;
attackSprite = spr_grabber_attack;
attackUpSprite = spr_grabber_attack;
deathSprite = spr_grabber_death;
hitSprite = spr_grabber_attack;
walkAnimationSpeed = 0;
deathSpriteLength = sprite_get_number(deathSprite) - 0.5;
minDistance = 17;

/* Sounds */
walkSound = snd_slime;
deathSound = snd_enemy_death;
attackSound = snd_skeleton_attack;
hurtSound = snd_enemy_hit;

/* Attack Values */
canAttack = true;
attackCooldownMax = 45;
attackCooldownCounter = 0;
attackDistance = 30;
attackTime = 40;
attackCounter = attackTime;
attackFrame = 6;
attackPause = true;

/* Hit timer */
flashTime = 20;
flashCounter = flashTime;
baseKnockback = 0;
knockbackCounter = baseKnockback;

/* Death */
deathTime = 20;
deathCounter = deathTime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(grabbedPlayer &amp;&amp; state != states.death) {
    obj_player.x = x;
    obj_player.y = y;
    image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

if(state != states.death) image_angle = point_direction(x,y,obj_player.x,obj_player.y) - 90;

if(grabbedPlayer &amp;&amp; state != states.hit &amp;&amp; state != states.death) state = states.idle;

/* Execute State */
switch(state) {
    case states.idle:
        scr_enemy_idle();
        break;
    case states.walk:
        scr_enemy_walk();
        break;
    case states.attack:
        sprite_index = attackSprite;
        image_index = floor(sprite_get_number(attackSprite) * (1 - (attackCounter / attackTime)));
        
        /* happens once */
        if(attackCounter == attackTime) {
            attackCooldownCounter = attackCooldownMax;
            spawnedAttack = false;
            if(attackPause) {
                path_end();
            }
        }
        
        if(image_index == attackFrame &amp;&amp; place_meeting(x,y,obj_player) &amp;&amp; !spawnedAttack) {
            show_debug_message('grabbed player');
            audio_play_sound_on(myEmitter, attackSound, false, 1);
            spawnedAttack = true;
            grabbedPlayer = true;
        }
        
        attackCounter--;
        
        /* state end */
        if(attackCounter &lt; 0) {
            attacking = false;
            canAttack = false;
            attackCounter = attackTime;
            state = states.idle;
        }
        break;
    case states.hit:
        scr_enemy_hit();
        break;
    case states.death:
        scr_enemy_death();
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_enemy_general_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!pit) {
    scr_draw_entity_shadow(10, 3, 0, 4);
    draw_sprite(spr_grabber_base,0,x,y);
}
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
