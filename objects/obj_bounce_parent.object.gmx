<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    ///Properties
    timer=0;
    z=0;
    start_x=x;
    start_y=y;
    target_x=x + 20;
    target_y=y;
    length=room_speed;
    
    shadow_alpha=0;
    shadow_alpha_min=.25;
    shadow_alpha_max=.5;
    shadow_scale=1;
    shadow_scale_min=.5;
    shadow_scale_max=1;
    
    bounce=3;
    height=64;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if(timer&lt;length)
      timer++;
    else
    {
      timer=length;
      if(bounce&gt;0)
      {
        bounce--;
        var _dir=point_direction(start_x,start_y,target_x,target_y);
        var _dist=point_distance(start_x,start_y,target_x,target_y)/2;
        target_x=x+lengthdir_x(_dist,_dir);
        target_y=y+lengthdir_y(_dist,_dir);
        start_x=x;
        start_y=y;
        length*=.75;
        height/=2;
        timer=0;
      }
    }
    x=lerp(start_x,target_x,timer/length);
    y=lerp(start_y,target_y,timer/length);
    z=arc(0,height,0,timer/length,.8);
    
    shadow_alpha=lerp(shadow_alpha_max,shadow_alpha_min,z/32);
    shadow_scale=lerp(shadow_scale_max,shadow_scale_min,z/32);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw self
depth=-y;
draw_sprite_ext(spr_shadow,0,x,y,shadow_scale,shadow_scale,0,c_white,.5);
draw_sprite_ext(sprite_index,image_index,x,y-z, image_xscale, image_yscale, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
