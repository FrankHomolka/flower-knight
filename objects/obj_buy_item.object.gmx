<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_focus_buy_item</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_dynamic_depth_parent</parentName>
  <maskName>spr_focus_buy_item</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>itemBought = false;
counter = random_range(0, 10);
startY = y;
startX = x;
shakeAmount = 3;
shake = false;
shakeForce = 3;
shakeDurMax = 10;
shakeDur = shakeDurMax;
moneyMultiplier = 200;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/* Let player buy item */
if(place_meeting(x,y,obj_player) &amp;&amp; !itemBought) {
    if(obj_player.interact &amp;&amp; (obj_money_controller.coins &gt;= (itemMap[? "price"] * moneyMultiplier))) {
        obj_money_controller.coins -= (itemMap[? "price"] * moneyMultiplier);
        audio_play_sound(snd_explosion, 5, false);
        itemBought = true;
        alreadyBought = ds_list_find_index(global.equippedItemsList, itemMap);
        show_debug_message('index = ' + string(alreadyBought));
        if(alreadyBought &gt; 0) {
            item = global.equippedItemsList[| alreadyBought];
            ds_map_replace( item, numBought, item[? "numBought"] + 1);
        } else {
            ds_list_add(global.equippedItemsList, itemMap);
        }
        script_execute(itemMap[? "script"]);
        shake = true;
    }
}

if(itemBought) {
    if(shake) {
        scr_shake_screen(shakeForce, shakeDur);
    } else{
        view_xview = scr_approach(view_xview,0,0.3);
        view_yview = scr_approach(view_yview,0,0.3);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(place_meeting(x,y,obj_player) &amp;&amp; !itemBought) {
    depth = -100;
    draw_set_alpha(1);
    draw_set_color(c_white);
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_color(c_black);
    draw_text_transformed((view_wport[0] / 2) - 6, (view_hport[0] / 3) - 100 - 6, "Buy " + string(itemMap[? "name"]) + "[" + string(itemMap[? "price"] * moneyMultiplier) + "]", 6, 6, 0);
    draw_set_color(c_white);
    draw_text_transformed((view_wport[0] / 2), (view_hport[0] / 3) - 100, "Buy " + string(itemMap[? "name"]) + "[" + string(itemMap[? "price"] * moneyMultiplier) + "]", 6, 6, 0);
    
    if((obj_money_controller.coins &lt; (itemMap[? "price"] * moneyMultiplier))) {
        draw_set_color(c_red);
        draw_text_transformed((view_wport[0] / 2), (view_hport[0] / 3) - 20, "CAN'T AFFORD", 4, 4, 0);
    }
    
    draw_set_color(c_black);
    draw_set_valign(fa_top);
    draw_set_halign(fa_left);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!itemBought) {
    scr_draw_entity_shadow(8, 5, 0, 0);
    counter += 1/10;
    draw_sprite(itemMap[? "sprite"], 0, x, startY + sin(counter));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
