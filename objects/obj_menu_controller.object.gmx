<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentRoom = noone;

// REMOVE TO TEST WITH SAME SEED
randomize();

view_wview[0] = 320;
view_hview[0] = 180;

view_wport[0] = 1600;
view_hport[0] = 900;
view_xview[0] = 0;
view_yview[0] = 0;
view_hspeed[0] = 100;
view_vspeed[0] = 100;
view_visible[0] = true;
view_enabled = true;

instance_create(x,y,obj_settings_controller);
instance_create(x,y,obj_view_controller);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(room != currentRoom) {
    currentRoom = room;
    if(room == rm_menu) {
        with(instance_create(0,0,obj_blank)) {
            text = "START";
            offsetY = -10;
            offsetX = 0;
            type = "normal";
            onClick = scr_goto_game_start;
            instance_change(obj_button, true);
        }
        with(instance_create(0,0,obj_blank)) {
            text = "SETTINGS";
            offsetY = 20;
            offsetX = 0;
            type = "normal";
            onClick = scr_goto_settings_room;
            instance_change(obj_button, true);
        }
        with(instance_create(0,0,obj_blank)) {
            text = "QUIT";
            offsetY = 50;
            offsetX = 0;
            type = "normal";
            onClick = scr_quit_game;
            instance_change(obj_button, true);
        }
        with(instance_create(0,0,obj_blank)) {
            text = "HARD";
            offsetY = 20;
            offsetX = 90;
            type = "normal"; 
            onClick = scr_toggle_difficulty;
            
            instance_change(obj_button, true);
        }
    } else if(room == rm_settings) {
        with(instance_create(20,20,obj_blank)) {
            if(global.playMusic) {
                text = "TURN MUSIC OFF";
            } else {
                text = "TURN MUSIC ON";
            }
            type = "wide";
            offsetY = -10;
            offsetX = 0;
            onClick = scr_toggle_music;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            if(global.showTutorial) {
                text = "TURN TUTORIAL OFF";
            } else {
                text = "TURN TUTORIAL ON";
            }
            type = "wide";
            offsetY = 20;
            offsetX = 0;
            onClick = scr_toggle_tutorial;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "CLEAR SAVE (DANGER)";
            offsetY = 50;
            offsetX = 0;
            type = "wide";
            onClick = scr_clear_save;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "BACK";
            offsetY = 80;
            offsetX = 0;
            type = "normal";
            onClick = scr_goto_menu;
            instance_change(obj_button, true);
        }
    } else {
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_font(fnt_1);
if(room == rm_menu) {
    tutorialTextSize = 0.8;
    draw_text_transformed(room_width / 5, 80, "Arrow keys to move", tutorialTextSize, tutorialTextSize, 0);
    draw_text_transformed(room_width / 5, 100, "'Q' to attack", tutorialTextSize, tutorialTextSize, 0);
    draw_text_transformed(room_width / 5, 120, "'W' to dash", tutorialTextSize, tutorialTextSize, 0);
    draw_text_transformed(room_width / 5, 140, "'V' for fullscreen", tutorialTextSize, tutorialTextSize, 0);
} else {
    draw_text_transformed(room_width / 2, 20, "SETTINGS", 2, 2, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
