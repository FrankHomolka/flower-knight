<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>currentRoom = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(room != currentRoom) {
    currentRoom = room;
    if(room == rm_menu) {
        with(instance_create(0,0,obj_blank)) {
            text = "START";
            offsetY = 10;
            offsetX = 0;
            type = "normal";
            onClick = scr_goto_game_start;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(0,0,obj_blank)) {
            text = "SETTINGS";
            offsetY = 30;
            offsetX = 0;
            type = "normal";
            onClick = scr_goto_settings_room;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(0,0,obj_blank)) {
            text = "QUIT";
            offsetY = 50;
            offsetX = 0;
            type = "normal";
            onClick = scr_quit_game;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(0,0,obj_blank)) {
            text = "Difficulty: HARD";
            offsetY = 20;
            offsetX = 90;
            type = "normal"; 
            onClick = scr_toggle_difficulty;
            spriteButton = false;
            instance_change(obj_button, true);
        }
    } else if(room == rm_settings) {
        with(instance_create(20,20,obj_blank)) {
            text = "REBIND KEYS";
            type = "wide";
            offsetY = -40;
            offsetX = 0;
            onClick = scr_goto_rebind_keys;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        // Resolution options
        with(instance_create(20,20,obj_blank)) {
            text = "1280x720";
            type = "wide";
            offsetY = -70;
            offsetX = -120;
            onClick = scr_1280x720;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "1600x900p";
            type = "wide";
            offsetY = -40;
            offsetX = -120;
            onClick = scr_1600x900;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "1920x1080p";
            type = "wide";
            offsetY = -10;
            offsetX = -120;
            onClick = scr_1920x1080;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "2560x1440p";
            type = "wide";
            offsetY = 20;
            offsetX = -120;
            onClick = scr_2560x1440;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            if(global.playMusic) {
                sprite = spr_music_off;
            } else {
                sprite = spr_music_on;
            }
            type = "small";
            offsetY = -10;
            offsetX = 0;
            onClick = scr_toggle_music;
            spriteButton = true;
            instance_change(obj_button, true);
        }
        // Music volume
        with(instance_create(20,20,obj_blank)) {
            text = "-";
            offsetY = -10;
            offsetX = 80;
            type = "small";
            onClick = scr_music_gain_down;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "+";
            offsetY = -10;
            offsetX = 110;
            type = "small";
            onClick = scr_music_gain_up;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            if(global.showTutorial) {
                text = "TURN TUTORIAL OFF";
            } else {
                text = "TURN TUTORIAL ON";
            }
            spriteButton = false;
            type = "wide";
            offsetY = 20;
            offsetX = 0;
            onClick = scr_toggle_tutorial;
            instance_change(obj_button, true);
        }
        // Sound volume
        with(instance_create(20,20,obj_blank)) {
            text = "-";
            offsetY = 20;
            offsetX = 80;
            type = "small";
            onClick = scr_sounds_gain_down;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "+";
            offsetY = 20;
            offsetX = 110;
            type = "small";
            onClick = scr_sounds_gain_up;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "CLEAR SAVE (DANGER)";
            offsetY = 50;
            offsetX = 0;
            type = "wide";
            onClick = scr_clear_save;
            spriteButton = false;
            instance_change(obj_button, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "BACK";
            offsetY = 85;
            offsetX = 0;
            type = "normal";
            onClick = scr_goto_menu;
            spriteButton = false;
            instance_change(obj_button, true);
        }
    } else if(room == rm_rebind_keys) {
        with(instance_create(20,20,obj_blank)) {
            text = "UP - ";
            type = "small";
            offsetY = -50;
            offsetX = 0;
            currentKey = obj_settings_controller.moveUp;
            onSave = scr_save_moveUp;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "FULLSCREEN - ";
            type = "small";
            offsetY = -50;
            offsetX = 100;
            currentKey = obj_settings_controller.fullscreen;
            onSave = scr_save_fullscreen;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "RIGHT - ";
            type = "small";
            offsetY = -35;
            offsetX = 0;
            currentKey = obj_settings_controller.moveRight;
            onSave = scr_save_moveRight;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        /*with(instance_create(20,20,obj_blank)) {
            text = "INTERACT - ";
            type = "small";
            offsetY = -35;
            offsetX = 100;
            currentKey = obj_settings_controller.interact;
            onSave = scr_save_interact;
            instance_change(obj_key_rebind, true);
        }*/
        with(instance_create(20,20,obj_blank)) {
            text = "DOWN - ";
            type = "small";
            offsetY = -20;
            offsetX = 0;
            currentKey = obj_settings_controller.moveDown;
            onSave = scr_save_moveDown;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "LEFT - ";
            type = "small";
            offsetY = -5;
            offsetX = 0;
            currentKey = obj_settings_controller.moveLeft;
            onSave = scr_save_moveLeft;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "ATTACK - ";
            type = "small";
            offsetY = 10;
            offsetX = 0;
            currentKey = obj_settings_controller.attack;
            onSave = scr_save_attack;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "DODGE - ";
            type = "small";
            offsetY = 25;
            offsetX = 0;
            currentKey = obj_settings_controller.dodge;
            onSave = scr_save_dodge;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "MAP - ";
            type = "small";
            offsetY = 40;
            offsetX = 0;
            currentKey = obj_settings_controller.viewMap;
            onSave = scr_save_viewMap;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "QUESTS - ";
            type = "small";
            offsetY = 55;
            offsetX = 0;
            currentKey = obj_settings_controller.viewQuests;
            onSave = scr_save_viewQuests;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        with(instance_create(20,20,obj_blank)) {
            text = "PAUSE - ";
            type = "small";
            offsetY = 70;
            offsetX = 0;
            currentKey = obj_settings_controller.pause;
            onSave = scr_save_pause;
            spriteButton = false;
            instance_change(obj_key_rebind, true);
        }
        // ADD INTERACT BUTTON AND RESTART BUTTON, and FULLSCREEN
        with(instance_create(20,20,obj_blank)) {
            text = "BACK";
            offsetY = 85;
            offsetX = 0;
            type = "normal";
            onClick = scr_goto_settings_room;
            spriteButton = false;
            instance_change(obj_button, true);
        }
    } else {
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_font(fnt_ui);
if(room == rm_menu) {
    tutorialTextSize = 0.8;
} else if(room == rm_settings) {
    depth = 0;
    draw_set_color(c_black);
    draw_rectangle(0,0,room_width,room_height,false);
    draw_set_color(c_white);
    draw_text_transformed(room_width / 2, 20, "SETTINGS", 2, 2, 0);
    draw_text_transformed((room_width / 2) + 130, (room_height / 2) - 20, "Music Volume", 0.3, 0.3, 0);
    draw_text_transformed((room_width / 2) + 130, (room_height / 2) - 10, string(global.musicGain * 100) + "/100", 0.3, 0.3, 0);
    draw_text_transformed((room_width / 2) + 130, (room_height / 2) + 10, "Sound Volume", 0.3, 0.3, 0);
    draw_text_transformed((room_width / 2) + 130, (room_height / 2) + 20, string(global.soundsGain * 100) + "/100", 0.3, 0.3, 0);
} else if(room == rm_rebind_keys) {
    depth = 0;
    draw_set_color(c_black);
    draw_rectangle(0,0,room_width,room_height,false);
    draw_set_color(c_white);
    draw_text_transformed(room_width / 2, 20, "REBIND KEYS", 2, 2, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
