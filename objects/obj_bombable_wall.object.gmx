<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_bombable_wall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_speed = 0;
destroy = false;
depth = -y - 10000;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if((place_meeting(x,y,obj_bomb_explosion) || place_meeting(x,y,obj_enemy_bomb_explosion)) &amp;&amp; destroy == false) {
    
    if(!audio_is_playing(snd_unlocked_item)) {
        with(instance_create(x,y,obj_blank)) {
            soundToPlay = snd_unlocked_item;
            instance_change(obj_sound_emitter,true);
        }
    }
    if(instance_exists(obj_bomb_room)) {
        obj_bomb_room.hidden = false;
    }
    if(instance_exists(obj_quest_controller)) {
        obj_quest_controller.bombRoomRevealed = true;
    }
    with(obj_bombable_wall) {
        destroy = true;
    }
}

if(destroy) {
    
    tile = tile_layer_find(-y + 100000, x, y);
    tile1 = tile_layer_find(-y - 20, x, y);
    if(tile != -1) {
        tile_delete(tile);
        show_debug_message('found &amp; deleted tile');
    }
    if(tile1 != -1) {
        tile_delete(tile1);
        show_debug_message('found &amp; deleted tile');
    }
    
    switch(image_index) {
        case 0: // bottom
            tile = tile_layer_find(-y + 16 + 100000, x, y + 16);
            tile1 = tile_layer_find(-y + 16 - 20, x, y + 16);
            if(tile != -1) {
                tile_delete(tile);
                show_debug_message('found &amp; deleted tile');
            }
            if(tile1 != -1) {
                tile_delete(tile1);
                show_debug_message('found &amp; deleted tile');
            }
            tile_add(tileSheet, 0 + (16*choose(0,1,2,3)), 32, 16, 16, x,y + 16, -y + 8);
            break;
        case 1: // right
            tile = tile_layer_find(-y + 100000, x + 16, y);
            tile1 = tile_layer_find(-y - 20, x + 16, y);
            if(tile != -1) {
                tile_delete(tile);
                show_debug_message('found &amp; deleted tile');
            }
            if(tile1 != -1) {
                tile_delete(tile1);
                show_debug_message('found &amp; deleted tile');
            }
            tile_add(tileSheet, 0 + (16*choose(0,1,2,3)), 32, 16, 16, x + 16,y, -y + 8);
            break;
        case 2: // top
            tile = tile_layer_find(-y - 16 + 100000, x, y - 16);
            tile1 = tile_layer_find(-y - 16 - 20, x, y - 16);
            if(tile != -1) {
                tile_delete(tile);
                show_debug_message('found &amp; deleted tile');
            }
            if(tile1 != -1) {
                tile_delete(tile1);
                show_debug_message('found &amp; deleted tile');
            }
            tile_add(tileSheet, 0 + (16*choose(0,1,2,3)), 32, 16, 16, x,y - 16, -y + 8);
            break;
        case 3: // left
            tile = tile_layer_find(-y + 100000, x - 16, y);
            tile1 = tile_layer_find(-y - 20, x - 16, y);
            if(tile != -1) {
                tile_delete(tile);
                show_debug_message('found &amp; deleted tile');
            }
            if(tile1 != -1) {
                tile_delete(tile1);
                show_debug_message('found &amp; deleted tile');
            }
            tile_add(tileSheet, 0 + (16*choose(0,1,2,3)), 32, 16, 16, x - 16,y, -y + 8);
            break;
    }
    
    tile_add(tileSheet, 0 + (16*choose(0,1,2,3)), 32, 16, 16, x,y, -y + 8);
    mp_grid_clear_cell(global.grid, floor(x / 16), floor(y / 16));
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
