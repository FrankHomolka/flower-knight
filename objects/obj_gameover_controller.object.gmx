<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_player.restart) {
    if(room == rm_tutorial) {
        obj_player.x = obj_pit_respawn.x;
        obj_player.y = obj_pit_respawn.y;
        obj_player.hp = 100;
        obj_player.state = states.idle;
        obj_player.dead = false;
        instance_destroy();
    } else {
        with(obj_player) {
            instance_destroy();
        }
        ds_list_clear(global.equippedItemsList);
        ds_list_clear(obj_focus_controller.playerHitFocusList);
        ds_list_clear(obj_focus_controller.playerAttackFocusList);
        ds_list_clear(obj_focus_controller.playerDashFocusList);
        ds_list_clear(obj_focus_controller.playerDashingFocusList);
        ds_list_clear(obj_focus_controller.playerHitEnemyFocusList);
        instance_create(x,y,obj_player);
        obj_quest_controller.gold = 0;
        room_goto(rm_shop);
    }
}

if(room == rm_shop) {
    obj_player.x = obj_player_spawn.x;
    obj_player.y = obj_player_spawn.y;
    
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Get gui height and width
var gw = display_get_gui_width();
var gh = display_get_gui_height();

if(room == rm_tutorial) {
    text = "Press 'R' to respawn";
} else {
    text = "Press 'R' to return to shop";
}

draw_set_alpha(1);
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
draw_set_color(c_black);
draw_text_transformed((gw / 2) - 6, (gh / 2) - 100 - 6, "YOU ARE DEAD", 13., 13, 0);
draw_set_color(c_white);
draw_text_transformed(gw / 2, (gh / 2) - 100, "YOU ARE DEAD", 13, 13, 0);
draw_set_color(c_black);
draw_text_transformed((gw / 2) - 6, (gh / 2) + 100 - 6, text, 7, 7, 0);
draw_set_color(c_white);
draw_text_transformed(gw / 2, (gh / 2) + 100, text, 7, 7, 0);
draw_set_color(c_black);
draw_set_valign(fa_top);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
