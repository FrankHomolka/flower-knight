<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_focus_chain_lightning</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_sound_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
hitCooldownMax = 90;
hitCooldown = hitCooldownMax;
life = hitCooldown * 4;
critChance = 0;
image_speed = 1;
lightSize = 70;
lightningTarget = noone;
spawnedChain = false;
i = 0;
while(i &lt; 300 &amp;&amp; lightningTarget == noone) {
    temp = collision_circle(x, y, 128, obj_enemy_parent, false, true);
    if(target != temp) {
        lightningTarget = temp;
        show_debug_message('found lightning target');
    }
    i++;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_draw_light(light, lightSize, c_blue);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(target.state != states.death) {
    x = target.x;
    y = target.y;
    hitCooldown--;
    if(hitCooldown &lt; 0) {
        hitCooldown = hitCooldownMax;
        with(target) {
            damageSource = other;
            lastDamageSource = obj_fire;
            scr_try_hit_enemy(1, self, false, 0);
        }
    }
    life--;
    if(life &lt; 0)
        instance_destroy();
} else {
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if(instance_exists(lightningTarget)) {
    if(!spawnedChain &amp;&amp; shouldSpawnChain &amp;&amp; numSpawned &lt; 5) {
        with(instance_create(x, y, obj_blank)) {
            hitDamage = other.hitDamage;
            target = other.lightningTarget;
            numSpawned = other.numSpawned + 1;
            shouldSpawnChain = false;
            instance_change(obj_chain_lightning, true);
        }
        shouldSpawnChain = false;
    }
    width = sqrt((sqr(x - lightningTarget.x)) + (sqr(y - lightningTarget.y)));
    angle = point_direction(x, y, lightningTarget.x, lightningTarget.y);
    show_debug_message(width);
    draw_sprite_general(spr_chain_lightning, image_index, 0, 0, width, 8, x,y,1,1, angle, c_white, c_white, c_white,  c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
