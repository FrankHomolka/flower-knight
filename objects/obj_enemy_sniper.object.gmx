<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_sniper</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy_parent</parentName>
  <maskName>spr_archer_idle</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();


/* Mob values */
chaseDistance = 200;
moveSpeed = 0.55;
initalMoveSpeed = moveSpeed;
maxHp = 45;
hp = maxHp;
attackDamage = 10;
initalAttackDamage = attackDamage;
customWalk = false;
attackObject = obj_enemy_archer_attack;
goldDropOnDeath = 20;

/* Animation and Sprites */
sprite = spr_sniper;
idleSprite = spr_sniper_walk;
walkSprite = spr_sniper_walk;
walkUpSprite = spr_sniper_walk;
attackSprite = spr_sniper_attack;
attackUpSprite = spr_sniper_attack;
deathSprite = spr_sniper_death;
hitSprite = spr_sniper;
walkAnimationSpeed = 0.1;
deathSpriteLength = sprite_get_number(deathSprite) - 0.5;

/* Sounds */
walkSound = snd_step;
deathSound = snd_enemy_death;
attackSound = snd_arrow_shot;
hurtSound = snd_enemy_hit;

/* Attack Values */
attackCooldownMax = 90;
attackDistance = 250;
attackTime = 100;
initalAttackTime = attackTime;
attackCounter = attackTime;
attackFrame = 9;

/* Knockback */
baseKnockback = 3;
knockbackCounter = baseKnockback;

/* Death */
deathTime = 20;
deathCounter = deathTime;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/* Execute State */
switch(state) {
    case states.idle:
        scr_enemy_idle();
        break;
    case states.walk:
        scr_enemy_walk();
        break;
    case states.attack:
        scr_sniper_attack();
        break;
    case states.hit:
        scr_enemy_hit();
        if(attacking)
            scr_sniper_attack();
        break;
    case states.death:
        scr_enemy_death();
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!pit) {
    scr_draw_entity_shadow(13, 4, 0, -2);
}
event_inherited();
draw_set_alpha(1);
if(state == states.attack &amp;&amp; !collision_line(x,y,obj_player.x,obj_player.y,obj_wall,false,false)) {
    
    draw_set_alpha(1);
    draw_set_color(c_white);
    if(image_index &gt; attackFrame - 1) draw_set_color(c_red)
    draw_line_width(x,y,obj_player.x,obj_player.y, 1 );
    draw_set_color($d891e5);
    if(image_index &gt; attackFrame - 1) draw_set_color(c_red)
    draw_set_alpha(0.4);
    draw_line_width(x,y,obj_player.x,obj_player.y, (image_index / attackFrame) * 6 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
